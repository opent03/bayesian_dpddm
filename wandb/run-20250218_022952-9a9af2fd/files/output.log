  0%|                                                                                                                                        | 0/50 [00:03<?, ?it/s]
Traceback (most recent call last):
  File "/home/viet/bayesian_dpddm/experiments/exp_cifar10.py", line 146, in <module>
    main()
  File "/home/viet/bayesian_dpddm/experiments/exp_cifar10.py", line 105, in main
    monitor.train_model(tqdm_enabled=True)
  File "/home/viet/bayesian_dpddm/bayesian_dpddm/monitors/bayesian_monitor.py", line 92, in train_model
    for train_step, (features, labels) in enumerate(self.trainloader):
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 708, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 764, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torch/utils/data/_utils/fetch.py", line 52, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torchvision/datasets/cifar.py", line 119, in __getitem__
    img = self.transform(img)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torchvision/transforms/v2/_container.py", line 51, in forward
    outputs = transform(*inputs)
              ^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torchvision/transforms/v2/_transform.py", line 68, in forward
    flat_outputs = [
                   ^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torchvision/transforms/v2/_transform.py", line 69, in <listcomp>
    self.transform(inpt, params) if needs_transform else inpt
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torchvision/transforms/v2/_geometry.py", line 906, in transform
    inpt = self._call_kernel(
           ^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torchvision/transforms/v2/_transform.py", line 49, in _call_kernel
    return kernel(inpt, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/torchvision/transforms/_functional_pil.py", line 235, in crop
    return img.crop((left, top, left + width, top + height))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/PIL/Image.py", line 1302, in crop
    return self._new(self._crop(self.im, box))
                     ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viet/anaconda3/envs/bayes/lib/python3.11/site-packages/PIL/Image.py", line 1320, in _crop
    absolute_values = (abs(x1 - x0), abs(y1 - y0))
                       ^^^^^^^^^^^^
KeyboardInterrupt
